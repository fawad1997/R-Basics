## Slide 3 ---------------------------------------------
day <- c(14, 18:20)
month <- "September"
year <- 2018
paste0(month, day, year)
paste(month, day, year, sep="-")
## Slide 4 ---------------------------------------------
main_dir <- "C:/Users/Scottg16/Desktop/output_training/"
paste0(main_dir, "data/us_state_cigarette_data.rdata")
## Slide 5 ---------------------------------------------
states <- c("North Carolina", "North Dakota", "South Dakota")
grepl("Dakota", states)
grep("Dakota", states)
grep("Dakota", states, value=T)
## Slide 6 ---------------------------------------------
mmr <- c(31.66, 33.02, 81.42, 79.54, 88.74, 52.57,
50.42, 1246.75, 419.74, 489.17, 779.53)
location_name <- c("Chile", "United Kingdom", "Guatemala", "Iraq",
"Bangladesh", "China", "Cambodia", "Central African Republic",
"Uganda", "Botswana", "Nigeria")
region_name <- c("Southern Latin America", "Western Europe",
"Central Latin America", "North Africa and Middle East",
"South Asia", "East Asia", "Southeast Asia",
"Central Sub-Saharan Africa", "Eastern Sub-Saharan Africa",
"Southern Sub-Saharan Africa", "Western Sub-Saharan Africa")
super_region_name <- c("High-income", "High-income",
"Latin America and Caribbean", "North Africa and Middle East",
"South Asia", "Southeast Asia, East Asia, and Oceania",
"Southeast Asia, East Asia, and Oceania", "Sub-Saharan Africa",
"Sub-Saharan Africa", "Sub-Saharan Africa", "Sub-Saharan Africa")
data <- data.frame(mmr, location_name, region_name, super_region_name)
head(data)
## Slide 7 ---------------------------------------------
data <- data[grepl("Asia", data$region_name),]
head(data)
## Slide 8 ---------------------------------------------
data <- data[, grep("name", names(data))]
head(data)
library(dplyr)
View(data)
View(data)
gapminder <- read.csv("https://raw.githubusercontent.com/resbaz/r-novice-gapminder-files/master/data/gapminder-FiveYearData.csv")
View(gapminder)
View(gapminder)
#Summarise data
summary(gapminder)
?filter
# 1. filter() is used to pick observations...
# logical operators
australia <- filter(gapminder,country == "Australia")
head(australia)
View(australia)
# only life expectancy higher than 81
life80 <- filter(gapminder,lifeExp > 81)
View(life80)
### 2. arrange(): reorder rows...
# higher GDP capital
arrange(gapminder,gdpPerCap)
### 2. arrange(): reorder rows...
# higher GDP capital
arrange(gapminder,gdpPercap)
head(arrange(gapminder,gdpPercap))
head(arrange(gapminder,desc(gdpPercap)))
### 3. select(): to pick variables
gap_small <- select(gapminder,year,country,gdpPercap)
head(gap_small)
### combine two operations...
gap_small_97 <- filter(gap_small,year==1997)
View(gap_small_97)
# other way...
filter(select(gapminder,country,year),year==1997)
# third method, same thing using pipe operator '%>%'
gap_small_97 <- gapminder %>% select(country,year, gdpPercap) %>% filter(year==1997)
gap_small_97
gapminder %>% summary()
# is same as
summary(gapminder)
eritrea <- gapminder %>% filter(year == 2002 & country == 'Eritrea')
View(eritrea)
eritrea <- gapminder %>% filter(year == 2002 & country == 'Eritrea') %>% select(lifeExp)
View(eritrea)
eritrea <- gapminder %>% filter(year == 2002 , country == 'Eritrea') %>% select(lifeExp)
View(eritrea)
### 4. mutate(): to create new variables
gap_gdp <- gapminder %>% mutate(gdp = gdpPercap * pop)
View(gap_gdp)
gap_gdp <- gapminder %>% mutate(gdp = gdpPercap * pop, gdpMillion = gdp/1000000)
View(gap_gdp)
### 5. summarize(): collapse to a single summary
gapminder %>% summarise(mean(lifeExp))
### 5. summarize(): collapse to a single summary
gapminder %>% summarise(meanLE = mean(lifeExp))
### 6. group+by(): change the scope
gapminder %>% group_by(country)
# find mean life expentancy for each continent in 2007
gaominder %>% filter(year==2007) %>% group_by(continent) %>% summarise(mean(lifeExp))
# find mean life expentancy for each continent in 2007
gapminder %>% filter(year==2007) %>% group_by(continent) %>% summarise(mean(lifeExp))
# find mean life expantancy for each continent in 2007
gapminder %>% filter(year==2007) %>% group_by(country) %>% summarise(mean(lifeExp))
# find mean life expantancy for each continent in 2007
countries_avg_life <- gapminder %>% filter(year==2007) %>% group_by(country) %>% summarise(mean(lifeExp))
View(countries_avg_life)
# find mean life expantancy for each continent in 2007
countries_avg_life <- gapminder %>% filter(year==2007) %>% group_by(continent) %>% summarise(mean(lifeExp))
View(countries_avg_life)
# find max life expectancy ever recorded for each country
max_country_life <- gapminder %>% group_by(country) %>% summarise(max(lifeExp))
View(max_country_life)
# find max life expectancy ever recorded for each country
max_country_life <- gapminder %>% group_by(country) %>% summarise(maxLe = max(lifeExp))
# find max life expectancy ever recorded for each country
max_country_life <- gapminder %>% group_by(country) %>% summarise(maxLe = max(lifeExp)) %>% arrange(max_country_life)
View(max_country_life)
# find max life expectancy ever recorded for each country
max_country_life <- gapminder %>% group_by(country) %>% summarise(maxLe = max(lifeExp)) %>% arrange(maxLe)
View(max_country_life)
## using starwars data
?starwars
View(starwars)
starwars %>% group_by(species) %>% summarise(n = n(), mass = mean(mass)) %>%filter(n>1)
starwars %>% group_by(species) %>% summarise(n = n(), mass = mean(mass,na.rm = TRUE)) %>% filter(n>1)
# associating dplyer with ggplot2
library(ggplot2)
gapminder  %>% filter(continent == "Europe") %>% group_by(year) %>% summarise(sum = sum(pop)) %>% ggplot()
gapminder  %>% filter(continent == "Europe") %>% group_by(year) %>% summarise(sum = sum(pop)) %>%
ggplot(aes(x=year,y=sum))  + geom_line(())
gapminder  %>% filter(continent == "Europe") %>% group_by(year) %>% summarise(sum = sum(pop)) %>%
ggplot(aes(x=year,y=sum))  + geom_line()
gapminder  %>% filter(continent == "Asia") %>% group_by(year) %>% summarise(sum = sum(pop)) %>%
ggplot(aes(x=year,y=sum))  + geom_line()
